#!/usr/bin/env ansible-playbook
---

- hosts: optional-dns-server
  become: true
  vars:
    domain: "vmsnat.local"
    ips_node_ordered: [
      "192.168.153.133",  # master
      "192.168.153.135",  # node 1
      "192.168.153.137",
      "192.168.153.136"]

  gather_facts: no
  tasks:
    - name: Install BIND and dependencies
      yum: name="epel-release" state="present"
    - yum:
        name: [ "bind", "python-pip" ]
        state: present
    - pip:
        name: dnspython==1.16.0

    - name: Generate new TSIG key
      shell: |
        rm -rf /var/named/K{{ domain }}*
        dnssec-keygen -a HMAC-MD5 -b 128 -n HOST -K /var/named {{ domain }}

    - name: Extract the TSIG key
      shell: "cat /var/named/K{{ domain }}*.key | awk '{print $7}'"
      register: TSIG_key

    - name: Empty zone file
      shell: |
        rm -rf /var/named/{{ domain }}*
        touch /var/named/{{ domain }}

    - name: Populate zone file for domain name
      blockinfile:
        marker: ""
        path: "/var/named/{{ domain }}"
        block: |
          $TTL 3D
          @               IN      SOA     {{ domain }}. root.{{ domain }}. (
                                          2014101500       ; Serial
                                          28800   ; Refresh
                                          7200    ; Retry
                                          604800  ; Expire
                                          86400)  ; Minimum TTL
                                  NS      {{ domain }}.

          1                       PTR     {{ domain }}.

          {{ domain }}.   IN      A       {{ ansible_host }}

    - name: Update ownership tp named dir
      shell: "chown named:named -R /var/named"

    - name: Configure DNS zone to allow updates using the generated key
      blockinfile:
        path: /etc/named.conf
        block: |
          zone "{{ domain }}" in{
              type master;
              file "/var/named/{{ domain }}";
              allow-update {key {{ domain }};};
          };

          key {{ domain }} {
              algorithm hmac-md5;
              secret "{{ TSIG_key.stdout }}";
          };

    - name: Update bind to listen to external requests ipv4
      replace:
        path: /etc/named.conf
        regexp: '(\s+)listen\-on port 53(\s+.*)?$'
        replace: '\1listen-on port 53 { any; };'

    - name: Update bind to listen to external requests ipv6
      replace:
        path: /etc/named.conf
        regexp: '(\s+)listen\-on\-v6 port 53(\s+.*)?$'
        replace: '\1listen-on-v6 port 53 { any; };'

    - name: Update bind to allow external queries
      replace:
        path: /etc/named.conf
        regexp: '(\s+)allow\-query(\s+.*)?$'
        replace: '\1allow-query     { any; };'

    - name: Reload bind service
      systemd:
        name: named
        state: reloaded
        enabled: yes

    - name: Add sub domains records
      nsupdate:
        key_name: "{{ domain }}"
        key_secret: "{{ TSIG_key.stdout }}"
        server: "{{ ansible_host }}"
        record: "{{ groups['clustervms'][item[0]][:item[1].find('.')] }}"
        value: "{{ ips_node_ordered[item[0]] }}"
        zone: "{{ domain }}"
      with_indexed_items:
        - "{{ groups['clustervms'] }}"

    - name: Reload bind service
      systemd:
        name: named
        state: reloaded
        enabled: yes

    - name: Firewall open DNS port tcp
      firewalld:
        port: "{{ item }}"
        permanent: yes
        zone: public
        state: enabled
      with_items:
        - "53/udp"
        - "53/tcp"

    - name: Firewall reload
      service:
        name: firewalld
        state: reloaded
        enabled: yes
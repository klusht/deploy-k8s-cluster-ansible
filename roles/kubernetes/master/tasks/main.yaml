---
- include_role:
    name: kubernetes/system

- include_role:
    name:  kubernetes/packages

- include_role:
    name: docker


- name: Get local k8s installation version
  shell: echo "no_apiserver_container$(docker ps | grep k8s_kube-apiserver)"
  register: get_kube_apiserver_docker
- name: get_kube_apiserver_docker
  debug: var=get_kube_apiserver_docker

- name: Initialize kubeadm if not already initialized
  when: get_kube_apiserver_docker.stdout == "no_apiserver_container"
  include_tasks: kubeadm_init.yaml

- name: Add kube config on root master for kubectl dirrect access
  lineinfile:
    path: "/root/.bashrc"
    line: "export KUBECONFIG=/etc/kubernetes/admin.conf"
    state: present

- name: Wait until kube-system api server is accepting requests
  shell: echo "result $(kubectl get pods 2>&1)"
  delay: 30
  retries: 20
  register: kubectl_api_call
  until: kubectl_api_call.stdout.find("The connection") == -1

- name: Wait until kube-system calico pods are all running
  shell: echo "result $(kubectl get pods -n kube-system | grep calico | grep -v Running 2>&1)"
  delay: 30
  retries: 20
  register: kubectl_system_pods_not_running
  until: kubectl_system_pods_not_running.stdout.find("calico") == -1
  ignore_errors: yes

- name: Install git to fetch kustomize remote references
  ignore_errors: yes
  package:
    name: ['git']
    state: present

- name: Check if kustomize is available
  stat:
    path: /usr/local/bin/kustomize
  register: kustomize_binary
- name: Install kustomize as binary if not already available on this machine
  when: kustomize_binary.stat.exists == false
  shell: |
    curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v3.5.4/kustomize_v3.5.4_linux_amd64.tar.gz --output /tmp/kustomize_v3.5.4_linux_amd64.tar.gz && \
    tar xzf /tmp/kustomize_v3.5.4_linux_amd64.tar.gz --directory /usr/local/bin

# TODO  metric server no stable on different updates
#- name: Install Add ons only if kube-system pods are all running
#  when: kubectl_system_pods_not_running.stdout.find("calico") == -1
#  include_tasks: install_add_ons.yaml









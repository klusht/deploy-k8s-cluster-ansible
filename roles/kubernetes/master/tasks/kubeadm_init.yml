---

- name: Reset Kubernetes master
  shell: "kubeadm reset --force"
  register: reset_cluster

#- name: fixing network communication
#  systemd:
#    name: kubelet
#    state: stopped
#- name: fixing network communication
#  systemd:
#    name: docker
#    state: stopped
#- name: fixing network communication
#  shell: "iptables --flush"
#- name: fixing flannel communication
#  shell: "iptables -tnat --flush"
#- name: fixing network communication
#  shell: "iptables -P FORWARD ACCEPT"
#- name: fixing flannel communication
#  ignore_errors: yes
#  shell: "ip link del docker0"
#- name: fixing network communication
#  systemd:
#    name: docker
#    state: reloaded
#    enabled: yes
#- name: fixing network communication
#  systemd:
#    name: kubelet
#    state: reloaded
#    enabled: yes

- name: Init Kubernetes cluster using calico pod network
  when: reset_cluster is succeeded and pod_network=='calico'
  shell: |
    kubeadm init --service-cidr {{ service_cidr }} \
                 --pod-network-cidr {{ calico_pod_network_cidr }} \
                 --apiserver-advertise-address 0.0.0.0 \
                 >  /tmp/kubeadm_init.log


- name: Init Kubernetes cluster using flannel pod network
  when: reset_cluster is succeeded and pod_network=='flannel'
  shell: |
    kubeadm init --service-cidr {{ service_cidr }} \
                 --pod-network-cidr {{ flannel_pod_network_cidr }} \
                 --apiserver-advertise-address 0.0.0.0 \
                 >  /tmp/kubeadm_init.log

- name: Remove taint from master to schedule pods on it
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
  register: schedule_pods_master
- debug: var=schedule_pods_master.stdout_lines

################ CALICO

- name: Get calico yaml to update the default 192.168.0.0 cidr
  when: pod_network=='calico'
  get_url:
    url: "{{ calico_remote_yaml }}"
    dest: /tmp/calico.yaml
    force: yes

- name: Update config with local defined IP range
  when: pod_network=='calico'
  lineinfile:
    path: /tmp/calico.yaml
    regexp: '^              value: "192.168.0.0/16"'
    line: '              value: "{{ calico_pod_network_cidr }}"'

- name: Apply Calico yaml
  when: pod_network=='calico'
  command: "kubectl apply -f /tmp/calico.yaml"
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  register: calico_yaml
- debug: var=calico_yaml.stdout_lines

################ flannel

- name: Bridged IPv4 traffic to iptablesâ€™ chains. This is a requirement for some CNI plugins to work
  when: pod_network=='flannel'
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

- name: Get flannel yaml to update the network interface
  when: pod_network=='flannel'
  get_url:
    url: "{{ flannel_remote_yaml }}"
    dest: /tmp/flannel.yaml
    force: yes
# TODO check if firewall is not a problem anymore
#- name: insert iface
#  lineinfile:
#    dest: /tmp/flannel.yaml
#    insertafter: '        - --ip-masq'
#    line: "        - --iface={{nic_interface}}"
#    state: present

- name: Install Flannel network
  when: pod_network=='flannel'
  command: "kubectl apply -f /tmp/flannel.yaml"
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  register: flannel_out
- debug: var=flannel_out.stdout_lines





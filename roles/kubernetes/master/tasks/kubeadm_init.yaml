---
# in case of errors on kubeadm init try resetting first
#- name: Kube adm reset
#  shell: kubeadm reset -f

- name: Init Kubernetes cluster using calico pod network
  when: hostvars[inventory_hostname].kubernetes.pod_network=='calico'
  shell: |
    kubeadm init --service-cidr {{ hostvars[inventory_hostname].kubernetes.service_cidr }} \
                 --pod-network-cidr {{ calico_pod_network_cidr }} \
                 --apiserver-advertise-address 0.0.0.0 \
                 >  /tmp/kubeadm_init.log


- name: Init Kubernetes cluster using flannel pod network
  when: hostvars[inventory_hostname].kubernetes.pod_network=='flannel'
  shell: |
    kubeadm init --service-cidr {{ hostvars[inventory_hostname].kubernetes.service_cidr }} \
                 --pod-network-cidr {{ flannel_pod_network_cidr }} \
                 --apiserver-advertise-address 0.0.0.0 \
                 >  /tmp/kubeadm_init.log

# if you VM master is high capacity you can remove this to add pods on master as well
- name: Remove taint from master to schedule pods on it
  when: hostvars[inventory_hostname].kubernetes.schedule_pods_on_master=='yes'
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
  register: schedule_pods_master
- debug: var=schedule_pods_master.stdout_lines

################ CALICO

- name: Get calico yaml to update the default 192.168.0.0 cidr
  when: hostvars[inventory_hostname].kubernetes.pod_network=='calico'
  get_url:
    url: "{{ calico_remote_yaml }}"
    dest: /tmp/calico.yaml
    force: yes

- name: Update config with local defined IP range
  when: hostvars[inventory_hostname].kubernetes.pod_network=='calico'
  lineinfile:
    path: /tmp/calico.yaml
    regexp: '^              value: "192.168.0.0/16"'
    line: '              value: "{{ calico_pod_network_cidr }}"'

- name: Apply Calico yaml
  when: hostvars[inventory_hostname].kubernetes.pod_network=='calico'
  command: "kubectl apply -f /tmp/calico.yaml"
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  register: calico_yaml
- debug: var=calico_yaml.stdout_lines

################ flannel

- name: Bridged IPv4 traffic to iptablesâ€™ chains. This is a requirement for some CNI plugins to work
  when: hostvars[inventory_hostname].kubernetes.pod_network=='flannel'
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

- name: Get flannel yaml to update the network interface
  when: hostvars[inventory_hostname].kubernetes.pod_network=='flannel'
  get_url:
    url: "{{ flannel_remote_yaml }}"
    dest: /tmp/flannel.yaml
    force: yes

- name: Install Flannel network
  when: hostvars[inventory_hostname].kubernetes.pod_network=='flannel'
  command: "kubectl apply -f /tmp/flannel.yaml"
  environment:
    KUBECONFIG: "/etc/kubernetes/admin.conf"
  register: flannel_out
- debug: var=flannel_out.stdout_lines





  - name: Make sure docker is stoped
    systemd:
      name: docker
      state: stopped
    ignore_errors: yes

  - name: Uninstall docker engine old Ubuntu
    when: ansible_distribution == "Ubuntu"
    ignore_errors: yes
    ansible.builtin.package:
      name: [
        'docker',
        'docker-engine',
        'docker.io',
        'containerd',
        'runc'
      ]
      state: absent

  - name: Add docker GPG key
    when: ansible_distribution == "Ubuntu"
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Add specified repository into sources list
    when: ansible_distribution == "Ubuntu"
    ansible.builtin.apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu bionic stable
      state: present

  - name: Install Docker dependencies
    when: ansible_distribution == "Ubuntu"
    apt:
      pkg:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
      state: present
      update_cache: true

  - name: Install Docker Ubuntu
    when: ansible_distribution == "Ubuntu"
    apt:
      pkg:
       - "docker-ce=5:{{ hostvars[inventory_hostname].kubernetes.cri_install_version }}~3-0~ubuntu-bionic"
       - "docker-ce-cli=5:{{ hostvars[inventory_hostname].kubernetes.cri_install_version }}~3-0~ubuntu-bionic"
       - "containerd.io"  # TODO
      state: present
      update_cache: true


#TODO
#  - name: Uninstall docker engine old CentOS
#    when: ansible_distribution == "CentOS"
#    ansible.builtin.package:
#      name: [
#        'docker',
#        'docker-client',
#        'docker-client-latest',
#        'docker-common',
#        'docker-latest',
#        'docker-latest-logrotate',
#        'docker-logrotate',
#        'docker-engine'
#        ]
#      state: absent
#
#  - name: Install docker utils
#    yum:
#      name: ['yum-utils', 'device-mapper-persistent-data', 'lvm2']
#      state: present
#  - name: Add docker repository
#      shell: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
#  - name: Add repository
#    when: ansible_distribution == "CentOS"
#    yum_repository:
#      name: docker
#      description: docker repo
#      baseurl: https://download.docker.com/linux/centos/docker-ce.repo
#  - name: Install docker engine latest option (RHEL/CentOS)
#    when: hostvars[inventory_hostname].kubernetes.docker_install_version=='latest'
#    yum:
#      name: "docker-ce-{{ hostvars[inventory_hostname].kubernetes.docker_install_version.replace('-', '.') }}-3.el7"
#      state: present
#
#  - name: Install DockerF
#    yum:
#      name:
#        - docker-ce-
#      state: latest
#      update_cache: true
#
#  - name: "Install docker engine specific version docker-ce-{{ hostvars[inventory_hostname].kubernetes.docker_install_version }}-3.el7 (RHEL/CentOS)"
#    when: hostvars[inventory_hostname].kubernetes.docker_install_version!='latest'
#    yum:
#      name: "docker-ce-{{ hostvars[inventory_hostname].kubernetes.docker_install_version }}-3.el7"
#      state: present
#
#  - name: Reload service docker
#    systemd:
#      name: docker
#      state: reloaded
#      enabled: yes